{"version":3,"sources":["components/dialogs/Dialogs.module.css","components/dialogs/DialogItem/DialogItem.js","components/dialogs/Message/Message.js","components/dialogs/AddMessageForm/AddMessageForm.js","components/dialogs/Dialogs.js","components/dialogs/DialogsContainer.js"],"names":["module","exports","DialogItem","props","path","id","className","s","dialog","active","to","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","Field","component","Textarea","validate","required","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","newMessageBody","isAuth","dialogsItems","values","sendMessage","compose","connect","dispatch","sendMessageCreator","WithAuthRedirect"],"mappings":"+GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,OAAS,wBAAwB,SAAW,0BAA0B,QAAU,2B,2FCWpMC,EARI,SAACC,GAChB,IAAIC,EAAO,YAAcD,EAAME,GAE/B,OAAO,qBAAKC,UAAWC,IAAEC,OAAS,IAAMD,IAAEE,OAAnC,SACH,cAAC,IAAD,CAASC,GAAIN,EAAb,SAAoBD,EAAMQ,UCDnBC,EAJC,SAACT,GACb,OAAO,qBAAKG,UAAWC,IAAEC,OAAlB,SAA2BL,EAAMU,W,yCCCtCC,EAAcC,YAAiB,IAkBtBC,cAAU,CAACC,KAAM,wBAAjBD,EAjBQ,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,cAACC,EAAA,EAAD,CAAOC,UAAWC,IAAUX,KAAK,iBAC1BY,SAAU,CAACC,IAAUV,GACrBW,YAAY,uBAInB,8BAEI,kDCmCDC,EA1CC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YACdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,cAAC,EAAD,CAAYrB,KAAMqB,EAAErB,KAAiBN,GAAI2B,EAAE3B,IAAZ2B,EAAE3B,OAC1E4B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,cAAC,EAAD,CAAStB,QAASsB,EAAEtB,SAAcsB,EAAE9B,OAC9DsB,EAAMS,eAe3B,OAAKjC,EAAMkC,OAGP,sBAAK/B,UAAWC,IAAEuB,QAAlB,UACI,qBAAKxB,UAAWC,IAAE+B,aAAlB,SACKT,IAEL,sBAAKvB,UAAWC,IAAE2B,SAAlB,UACI,8BAAMD,IAON,cAAC,EAAD,CAAgBf,SAxBR,SAACqB,GACjBpC,EAAMqC,YAAYD,EAAOH,yBAQH,cAAC,IAAD,CAAU1B,GAAI,Y,wBCA7B+B,sBACXC,aAnBkB,SAACf,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACe,GACtB,MAAO,CAGHH,YAAa,SAACJ,GAAkBO,EAASC,YAAmBR,SAUhES,IAFWJ,CAGbf","file":"static/js/3.62769865.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__kXCBN\",\"dialogsItems\":\"Dialogs_dialogsItems__eGk6x\",\"active\":\"Dialogs_active__jd7lC\",\"dialog\":\"Dialogs_dialog__3fWVu\",\"messages\":\"Dialogs_messages__2-Db0\",\"message\":\"Dialogs_message__3bsoG\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    let path = \"/dialogs/\" + props.id;\r\n\r\n    return <div className={s.dialog + ' ' + s.active}>\r\n        <NavLink to={path}>{props.name}</NavLink>\r\n    </div>\r\n}\r\n\r\nexport default DialogItem;","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\nconst Message = (props) => {\r\n    return <div className={s.dialog}>{props.message}</div>\r\n}\r\n\r\nexport default Message;","import {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/Validators\";\r\nimport React from \"react\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <Field component={Textarea} name=\"newMessageBody\"\r\n                   validate={[required, maxLength50]}\r\n                   placeholder=\"Enter your message\"/>\r\n            {/*<div><textarea value={newMessageBody}\r\n                           onChange={onNewMessageChange}\r\n                           placeholder=\"Enter your message\"></textarea></div>*/}\r\n            <div>\r\n                {/*<button onClick={onSendMessageClick}>Send</button>*/}\r\n                <button>Send</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm);","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/Validators\";\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n    let newMessageBody = state.newMessageBody;\r\n\r\n    /*let onSendMessageClick = () => {\r\n        props.sendMessage();\r\n    };*/\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n    };\r\n\r\n    /*let onNewMessageChange = (e) => {\r\n        let body = e.target.value;\r\n        props.updateNewMessageBody(body);\r\n    }*/\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div>{messagesElements}</div>\r\n                {/*<div>\r\n                    <div><textarea value={newMessageBody}\r\n                                   onChange={onNewMessageChange}\r\n                                   placeholder=\"Enter your message\"></textarea></div>\r\n                    <div><button onClick={onSendMessageClick}>Send</button></div>\r\n                </div>*/}\r\n                <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nexport default Dialogs;","import React from 'react';\r\nimport {sendMessageCreator, updateNewMessageBodyCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {WithAuthRedirect} from \"../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\n\r\n/*let AuthRedirectComponent = WithAuthRedirect(Dialogs);*/\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n       /* updateNewMessageBody: (body)=>{dispatch(updateNewMessageBodyCreator(body))},*/\r\n        /*sendMessage: ()=>{dispatch(sendMessageCreator())}*/\r\n        sendMessage: (newMessageBody)=>{dispatch(sendMessageCreator(newMessageBody))}\r\n    }\r\n}\r\n\r\n/*const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;*/\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps),\r\n    WithAuthRedirect\r\n)(Dialogs);\r\n\r\n"],"sourceRoot":""}